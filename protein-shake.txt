models
======

- Rethink all your models before making your tables. Think about the constraints
  that your fields are going to have.
- Uniqueness and constraints should be enforced by the database not by logic in
  your code.
- Pay attention to fields in Meta class when creating a model because django uses
  these in various places to do some serious stuff.




views
=====










urls
====











must-use-apps
=============

- Use virtualenv and virtualenvwrapper to create separate virtual environments for
  your projects.

- Absolutely use 'south'. It's the best solution for db migrations right now
  till something like this gets into django. ( Migrations are going into django
  core 1.7dev )
  
- Use 'django-debug-toolbar' for debugging django in development.

- Use redis. It's a fantastic tool use it for storing sessions and cache.
  but don't use large items as key/value or it'll consume more memory. 










pitfalls
========

- get_or_create can create multiple entries in your database if you don't 
  have unique constraints in the database.
- be careful when using unique_together on fields that have null values,
  in sql null!=null i.e. nulls are unique!
  
  
Database specific problems/solutions
====================================

- MySQL has default isolation level set to READ REPEATABLE. Understand what
  it does and change it to READ COMMITED if you get into problems.
  * get_or_create() creates problems with READ REPEATABLE!
- Be careful when using unique constraints on fields that have null values,
  in sql null!=null i.e. nulls are unique!
